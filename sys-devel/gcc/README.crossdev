To use crossdev to create cross toolchains you must have crossdev.  Due to growing differences
in Gentoo's and Funtoo's directory structures I find that the latest version that can be used
is crossdev-20151026-r1.  You can find it here:
https://gitweb.gentoo.org/repo/gentoo.git/tree/sys-devel/crossdev/crossdev-20151026-r1.ebuild?id=8e8c1029dcdbc71acd8a50b5c43ed22ad6b92411.
I haven't tried in a year or so though, perhaps some newer version magically works.

The following steps must only be done once for each cross toolchain you wish to make.

Set up package.env to pass the target's CFLAGS to gcc.  Just create a file in /etc/portage/env.
I'll use the example of my armv7a here:

touch /etc/portage/env/cross-armv7a-hardfloat-linux-gnueabi-gcc.conf

Then I copy my CFLAGS from my armv7a device's /etc/portage/make.conf:

ssh odroid grep CFLAGS /etc/portage/make.conf

Copy those flags and echo them to file:

echo 'CFLAGS="-Ofast -march=armv7-a -mtune=cortex-a5 -mfpu=neon-vfpv4 -mfloat-abi=hard"' \
>> /etc/portage/env/cross-armv7a-hardfloat-linux-gnueabi-gcc.conf

Now reference that file in /etc/portage/package.env.  Crossdev will demand that package.env be
a directory, so if it's not already set up that way, now's the time to do it.  I have a
/etc/portage/package.env/package.env file, crossdev will later place /etc/portage/package.env/<YOUR TUPLE> file(s) in there.
Leave those alone, as crossdev itself creates, updates, etc. those file(s).

echo "cross-armv7a-hardfloat-linux-gnueabi/gcc  cross-armv7a-hardfloat-linux-gnueabi-gcc.conf" \
>> /etc/portage/package.env/package.env

Set up your local repository (***only necessary until the new gcc ebuilds are in the tree***):

The 1st step is to install the gcc ebuild of interest in your local portage tree, there are many
guides detailing the steps to create a local portage tree.

Next run crossdev --init-target -t YOUR_TUPLE it will create the config files and overlay in your local portage tree.

Then go to the overlay directory crossdev created, you will find something like this:

`# ls -l

total 0

lrwxrwxrwx 1 root root 51 Aug 14 2017 binutils -> /var/git/meta-repo/kits/core-kit/sys-devel/binutils

lrwxrwxrwx 1 root root 32 Aug 14 2017 gcc -> /var/git/meta-repo/kits/core-kit/sys-devel/gcc

lrwxrwxrwx 1 root root 43 Aug 14 2017 gdb -> /var/git/meta-repo/kits/nokit/sys-devel/gdb

lrwxrwxrwx 1 root root 47 Aug 14 2017 glibc -> /var/git/meta-repo/kits/core-kit/sys-libs/glibc

lrwxrwxrwx 1 root root 57 Aug 14 2017 linux-headers -> /var/git/meta-repo/kits/core-kit/sys-kernel/linux-headers`

Simply remove the gcc link and replace it like this:

ln -s /var/git/<your_repo_name>/sys-devel/gcc gcc

lrwxrwxrwx 1 root root 32 Aug 14 2017 gcc -> /var/git/<your_repo_name>/sys-devel/gcc

Now create or add to an existing /etc/portage/bashrc file (I'd like to get rid of this, but for now it's necessary):

case ${CATEGORY}/${PN} in
    cross-<tuple>/gcc)
        if [ "${EBUILD_PHASE}" == "postinst" ]; then
            GCC_VER=$(<tuple>-gcc --version|grep Funtoo|cut -d- -f5|cut -d " " -f3|cut -d ")" -f1)
            rm /usr/<tuple>/etc/localtime 2>&1 >/dev/null
            ln -s /usr/share/zoneinfo/YOUR_LOCAL_TIMEZONE /usr/<tuple>/etc/localtime
            rm /usr/<tuple>/lib/libstdc*
            ln -s /usr/lib/gcc/<tuple>/$GCC_VER/libstdc* /usr/<tuple>/lib/
            STRING='SEARCH_DIRS_MASK="/usr/<tuple> '
            for DIR in /usr/lib/gcc/<tuple>/*; do
                STRING+="$DIR "
            done
            for DIR in /usr/lib64/gcc/<tuple>/*; do
                STRING+="$DIR "
            done
            STRING=${STRING%?}
            STRING+='"' 
            echo $STRING>/etc/revdep-rebuild/05<tuple>
        fi
    ;;
esac
Of course, replace all instances of <tuple> with the tuple you are building for, and YOUR_LOCAL_TIMEZONE
with your local timezone.  So here's my armv7a example on an x86_64 machine:

case ${CATEGORY}/${PN} in
	cross-armv7a-hardfloat-linux-gnueabi/gcc)
        if [ "${EBUILD_PHASE}" == "postinst" ]; then
            GCC_VER=$(armv7a-hardfloat-linux-gnueabi-gcc --version|grep Funtoo|cut -d- -f5|cut -d " " -f3|cut -d ")" -f1)
            rm /usr/armv7a-hardfloat-linux-gnueabi/etc/localtime 2>&1 >/dev/null
            ln -s /usr/share/zoneinfo/PST8PDT /usr/armv7a-hardfloat-linux-gnueabi/etc/localtime
            rm /usr/armv7a-hardfloat-linux-gnueabi/lib/libstdc*
            ln -s /usr/lib/gcc/armv7a-hardfloat-linux-gnueabi/$GCC_VER/libstdc* /usr/armv7a-hardfloat-linux-gnueabi/lib/
            STRING='SEARCH_DIRS_MASK="/usr/armv7a-hardfloat-linux-gnueabi '
            for DIR in /usr/lib/gcc/armv7a-hardfloat-linux-gnueabi/*; do
                STRING+="$DIR "
            done
            for DIR in /usr/lib64/gcc/armv7a-hardfloat-linux-gnueabi/*; do
                STRING+="$DIR "
            done
            STRING=${STRING%?}
            STRING+='"' 
            echo $STRING>/etc/revdep-rebuild/05armv7a-hardfloat-linux-gnueabi
        fi
;;
esac            

Now you can run crossdev to create your toolchain
